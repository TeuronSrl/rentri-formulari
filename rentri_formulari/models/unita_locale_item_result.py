# coding: utf-8

"""
    formulari

    Servizio Formulari RENTRI

    The version of the OpenAPI document: 1.0.20250114-507
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, StrictStr

class UnitaLocaleItemResult(BaseModel):
    """
    UnitaLocaleItemResult
    """
    num_iscr_sito: Optional[StrictStr] = None
    denominazione: Optional[StrictStr] = None
    codice_fiscale: Optional[StrictStr] = None
    indirizzo: Optional[StrictStr] = None
    civico: Optional[StrictStr] = None
    comune_id: Optional[StrictStr] = None
    nazione_id: Optional[StrictStr] = None
    citta_estera: Optional[StrictStr] = None
    __properties = ["num_iscr_sito", "denominazione", "codice_fiscale", "indirizzo", "civico", "comune_id", "nazione_id", "citta_estera"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> UnitaLocaleItemResult:
        """Create an instance of UnitaLocaleItemResult from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # set to None if num_iscr_sito (nullable) is None
        # and __fields_set__ contains the field
        if self.num_iscr_sito is None and "num_iscr_sito" in self.__fields_set__:
            _dict['num_iscr_sito'] = None

        # set to None if denominazione (nullable) is None
        # and __fields_set__ contains the field
        if self.denominazione is None and "denominazione" in self.__fields_set__:
            _dict['denominazione'] = None

        # set to None if codice_fiscale (nullable) is None
        # and __fields_set__ contains the field
        if self.codice_fiscale is None and "codice_fiscale" in self.__fields_set__:
            _dict['codice_fiscale'] = None

        # set to None if indirizzo (nullable) is None
        # and __fields_set__ contains the field
        if self.indirizzo is None and "indirizzo" in self.__fields_set__:
            _dict['indirizzo'] = None

        # set to None if civico (nullable) is None
        # and __fields_set__ contains the field
        if self.civico is None and "civico" in self.__fields_set__:
            _dict['civico'] = None

        # set to None if comune_id (nullable) is None
        # and __fields_set__ contains the field
        if self.comune_id is None and "comune_id" in self.__fields_set__:
            _dict['comune_id'] = None

        # set to None if nazione_id (nullable) is None
        # and __fields_set__ contains the field
        if self.nazione_id is None and "nazione_id" in self.__fields_set__:
            _dict['nazione_id'] = None

        # set to None if citta_estera (nullable) is None
        # and __fields_set__ contains the field
        if self.citta_estera is None and "citta_estera" in self.__fields_set__:
            _dict['citta_estera'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> UnitaLocaleItemResult:
        """Create an instance of UnitaLocaleItemResult from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return UnitaLocaleItemResult.parse_obj(obj)

        _obj = UnitaLocaleItemResult.parse_obj({
            "num_iscr_sito": obj.get("num_iscr_sito"),
            "denominazione": obj.get("denominazione"),
            "codice_fiscale": obj.get("codice_fiscale"),
            "indirizzo": obj.get("indirizzo"),
            "civico": obj.get("civico"),
            "comune_id": obj.get("comune_id"),
            "nazione_id": obj.get("nazione_id"),
            "citta_estera": obj.get("citta_estera")
        })
        return _obj


