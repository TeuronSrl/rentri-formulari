# coding: utf-8

"""
    formulari

    Servizio Formulari RENTRI

    The version of the OpenAPI document: 1.0.20250114-507
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictBool
from rentri_formulari.models.quantita_model import QuantitaModel

class QuantitaRifiutoModel(BaseModel):
    """
    QuantitaRifiutoModel
    """
    quantita: QuantitaModel = Field(...)
    verificato_in_partenza: Optional[StrictBool] = None
    __properties = ["quantita", "verificato_in_partenza"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> QuantitaRifiutoModel:
        """Create an instance of QuantitaRifiutoModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of quantita
        if self.quantita:
            _dict['quantita'] = self.quantita.to_dict()
        # set to None if verificato_in_partenza (nullable) is None
        # and __fields_set__ contains the field
        if self.verificato_in_partenza is None and "verificato_in_partenza" in self.__fields_set__:
            _dict['verificato_in_partenza'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> QuantitaRifiutoModel:
        """Create an instance of QuantitaRifiutoModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QuantitaRifiutoModel.parse_obj(obj)

        _obj = QuantitaRifiutoModel.parse_obj({
            "quantita": QuantitaModel.from_dict(obj.get("quantita")) if obj.get("quantita") is not None else None,
            "verificato_in_partenza": obj.get("verificato_in_partenza")
        })
        return _obj


