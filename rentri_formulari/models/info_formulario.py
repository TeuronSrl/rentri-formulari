# coding: utf-8

"""
    formulari

    Servizio Formulari RENTRI

    The version of the OpenAPI document: 1.0.20250114-507
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictInt
from rentri_formulari.models.stato_formulario import StatoFormulario

class InfoFormulario(BaseModel):
    """
    InfoFormulario
    """
    versione: Optional[StrictInt] = None
    stato_formulario: Optional[StatoFormulario] = Field(default=None, description="<p>Valori ammessi:<ul style=\"margin:0\"><li><i>InserimentoQuantita</i> - Il formulario necessita dei dati sulla quantità del rifiuto</li><li><i>InserimentoQuantitaTrasportoIniziale</i> - Il formulario necessita dei dati sulla quantità del rifiuto e dei dati del trasporto iniziale</li><li><i>InserimentoTrasportoIniziale</i> - Il formulario necessita dei dati del trasporto iniziale</li><li><i>FirmaProduttoreTrasportatoreIniziale</i> - Il formulario necessita della firma del produttore e del trasportatore iniziale</li><li><i>FirmaTrasportatoreIniziale</i> - Il formulario necessita della firma del trasportatore iniziale</li><li><i>FirmaProduttore</i> - Il formulario necessita della firma del produttore</li><li><i>InserimentoTrasportoSuccessivo</i> - Il formulario è in carico ad un traportatore e necessita dell'inserimento dei dati del trasporto successivo;             il trasportatore che ha in carico il rifiuto può inserire informazioni aggiuntive (annotazioni, trasbordo parziale, sosta tecnica, trasbordo totale, allegati)             che dovranno essere successivamente firmate</li><li><i>FirmaTrasportatoreSuccessivo</i> - Il formulario necessita della firma del trasportatore successivo al primo che ha in carico il rifiuto</li><li><i>FirmaAnnotazione</i> - Il formulario necessita della firma dell'annotazione da parte del soggetto che l'ha inserita</li><li><i>FirmaTrasbordoParziale</i> - Il formulario necessita della firma del trasportatore che effettua il trasbordo parziale del rifiuto</li><li><i>FirmaTrasbordoTotale</i> - Il formulario necessita della firma del trasportatore che prende in carico il rifiuto con l'operazione di trasbordo totale del rifiuto</li><li><i>FirmaSostaTecnica</i> - Il formulario necessita della firma del trasportatore che ha in carico il rifiuto e ha inserito i dati della sosta tecnica</li><li><i>FirmaAllegato</i> - Il formulario necessita della firma del soggetto che ha aggiunto i dati relativi all'allegato al formulario digitale</li><li><i>InserimentoAccettazione</i> - Il formulario è in carico all'ultimo trasportatore ed è in attesa dell'inserimento dei dati di accettazione da parte del destinatario verso cui è destinato il rifiuto             (a meno di ulteriori informazioni aggiuntive che l'ultimo trasportatore può inserire prima della consegna al destinatario)</li><li><i>FirmaAccettazione</i> - Il formulario necessita della firma del destinatario indicato nei dati di partenza</li><li><i>Accettato</i> - Il formulario è stato accettato dal destinatario ed ha concluso il suo ciclo di vita</li><li><i>RespintoParzialmenteRespinto</i> - Il formulario è stato respinto o parzialmente respinto, il trasportatore che ha in carico il rifiuto può inserire (in accordo con il produttore) i dati              di un nuovo destinatario</li><li><i>FirmaDestinatarioSuccessivo</i> - Il formulario è in attesa della firma dei dati del nuovo destinatario inseriti da parte del trasportatore che ha in carico il rifiuto</li><li><i>FirmaAccettazioneSuccessiva</i> - Il formulario necessita della firma del destinatario successivo a quello indicato nei dati di partenza che ha rifiutato totalmente o parzialmente il rifiuto</li><li><i>FirmaAnnullamento</i> - Il formulario necessita della firma dei dati di annullamento inseriti dal soggetto titolare della vidimazione del numero FIR</li><li><i>Annullato</i> - Il formulario risulta essere stato annullato</li><li><i>Indeterminato</i> - Il formulario è in uno stato non determinato per incoerenza dei dati contenuti</li></ul></p>")
    __properties = ["versione", "stato_formulario"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> InfoFormulario:
        """Create an instance of InfoFormulario from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # set to None if versione (nullable) is None
        # and __fields_set__ contains the field
        if self.versione is None and "versione" in self.__fields_set__:
            _dict['versione'] = None

        # set to None if stato_formulario (nullable) is None
        # and __fields_set__ contains the field
        if self.stato_formulario is None and "stato_formulario" in self.__fields_set__:
            _dict['stato_formulario'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> InfoFormulario:
        """Create an instance of InfoFormulario from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return InfoFormulario.parse_obj(obj)

        _obj = InfoFormulario.parse_obj({
            "versione": obj.get("versione"),
            "stato_formulario": obj.get("stato_formulario")
        })
        return _obj


