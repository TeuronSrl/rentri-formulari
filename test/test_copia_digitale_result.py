# coding: utf-8

"""
    formulari

    Servizio Formulari RENTRI

    The version of the OpenAPI document: 1.0.20250114-507
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from rentri_formulari.models.copia_digitale_result import CopiaDigitaleResult  # noqa: E501

class TestCopiaDigitaleResult(unittest.TestCase):
    """CopiaDigitaleResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CopiaDigitaleResult:
        """Test CopiaDigitaleResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CopiaDigitaleResult`
        """
        model = CopiaDigitaleResult()  # noqa: E501
        if include_optional:
            return CopiaDigitaleResult(
                identificativo = '',
                numero_fir = '',
                data_emissione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                num_iscr_sito = '',
                produttore = rentri_formulari.models.copia_digitale_ruolo_result.CopiaDigitaleRuoloResult(
                    codice_fiscale = '', 
                    denominazione = '', 
                    num_iscr_sito = '', 
                    data_conferma = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    via = '', 
                    civico = '', 
                    comune_id = '', ),
                destinatari = [
                    rentri_formulari.models.copia_digitale_ruolo_result.CopiaDigitaleRuoloResult(
                        codice_fiscale = '', 
                        denominazione = '', 
                        num_iscr_sito = '', 
                        data_conferma = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        via = '', 
                        civico = '', 
                        comune_id = '', )
                    ],
                trasportatori = [
                    rentri_formulari.models.copia_digitale_ruolo_result.CopiaDigitaleRuoloResult(
                        codice_fiscale = '', 
                        denominazione = '', 
                        num_iscr_sito = '', 
                        data_conferma = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        via = '', 
                        civico = '', 
                        comune_id = '', )
                    ],
                intermediari = [
                    rentri_formulari.models.copia_digitale_ruolo_result.CopiaDigitaleRuoloResult(
                        codice_fiscale = '', 
                        denominazione = '', 
                        num_iscr_sito = '', 
                        data_conferma = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        via = '', 
                        civico = '', 
                        comune_id = '', )
                    ],
                note = '',
                data_caricamento = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                codice_fiscale_caricamento = '',
                denominazione_caricamento = '',
                emesso_da_identificativo = '',
                emesso_da_denominazione = ''
            )
        else:
            return CopiaDigitaleResult(
        )
        """

    def testCopiaDigitaleResult(self):
        """Test CopiaDigitaleResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
