# coding: utf-8

"""
    formulari

    Servizio Formulari RENTRI

    The version of the OpenAPI document: 1.0.20250114-507
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rentri_formulari.models.dati_trasmissione_formulario_model import DatiTrasmissioneFormularioModel

class TestDatiTrasmissioneFormularioModel(unittest.TestCase):
    """DatiTrasmissioneFormularioModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DatiTrasmissioneFormularioModel:
        """Test DatiTrasmissioneFormularioModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DatiTrasmissioneFormularioModel`
        """
        model = DatiTrasmissioneFormularioModel()
        if include_optional:
            return DatiTrasmissioneFormularioModel(
                dati_partenza = rentri_formulari.models.dati_trasmissione_partenza_model.DatiTrasmissionePartenzaModel(
                    numero_fir = 'WPQZYQ ) ._),,#_**&,\"%\"* - *- !\'# 1757701929816286488291663/.$\'\"&(_#+% #\"&%-/*- )!./ !),+#/)B0', 
                    produttore = null, 
                    destinatario = null, 
                    trasportatori = [
                        rentri_formulari.models.dati_trasportatore_trasmissione_model.DatiTrasportatoreTrasmissioneModel(
                            trasportatore_id = 56, )
                        ], 
                    data_emissione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    intermediari = [
                        rentri_formulari.models.dati_intermediari_formulario_model.DatiIntermediariFormularioModel(
                            denominazione = '0', 
                            codice_fiscale = '01234', 
                            nazione_id = '', 
                            numero_iscrizione_albo = 'AE/807288', )
                        ], 
                    rifiuto = null, 
                    trasbordo_parziale_origine = null, 
                    annotazioni = '', ),
                dati_trasporto = [
                    null
                    ],
                dati_accettazione = rentri_formulari.models.dati_accettazione_model.DatiAccettazioneModel(
                    tipo_accettazione = null, 
                    quantita_accettata = null, 
                    causale_respingimento = null, 
                    motivo_respingimento = '', 
                    data_ora_arrivo = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    attesa_verifica_analitica = True, ),
                dati_annotazioni = [
                    rentri_formulari.models.dati_annotazione_model.DatiAnnotazioneModel(
                        annotazione = '0', 
                        identificativo_soggetto = '0', )
                    ],
                dati_trasbordo_totale = rentri_formulari.models.dati_trasbordo_totale_trasmissione_model.DatiTrasbordoTotaleTrasmissioneModel(
                    id_trasportatore_trasbordo = 56, 
                    trasportatore = null, 
                    presa_in_carico = null, ),
                dati_trasbordi_parziali = [
                    rentri_formulari.models.dati_trasbordo_parziale_trasmissione_model.DatiTrasbordoParzialeTrasmissioneModel(
                        trasportatore_id = 56, 
                        trasportatore = null, 
                        numero_fir = '0', 
                        quantita_residua = null, 
                        causale = '0', )
                    ],
                dati_soste_tecniche = [
                    rentri_formulari.models.dati_sosta_tecnica_trasmissione_model.DatiSostaTecnicaTrasmissioneModel(
                        trasportatore_id = 56, 
                        luogo_stazionamento = '0', 
                        data_ora_sospensione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        data_ora_ripresa = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                dati_destinazioni_successive = [
                    rentri_formulari.models.dati_destinazioni_successive_trasmissioni_model.DatiDestinazioniSuccessiveTrasmissioniModel(
                        destinatario = null, 
                        accettazione = null, )
                    ]
            )
        else:
            return DatiTrasmissioneFormularioModel(
                dati_partenza = rentri_formulari.models.dati_trasmissione_partenza_model.DatiTrasmissionePartenzaModel(
                    numero_fir = 'WPQZYQ ) ._),,#_**&,\"%\"* - *- !\'# 1757701929816286488291663/.$\'\"&(_#+% #\"&%-/*- )!./ !),+#/)B0', 
                    produttore = null, 
                    destinatario = null, 
                    trasportatori = [
                        rentri_formulari.models.dati_trasportatore_trasmissione_model.DatiTrasportatoreTrasmissioneModel(
                            trasportatore_id = 56, )
                        ], 
                    data_emissione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    intermediari = [
                        rentri_formulari.models.dati_intermediari_formulario_model.DatiIntermediariFormularioModel(
                            denominazione = '0', 
                            codice_fiscale = '01234', 
                            nazione_id = '', 
                            numero_iscrizione_albo = 'AE/807288', )
                        ], 
                    rifiuto = null, 
                    trasbordo_parziale_origine = null, 
                    annotazioni = '', ),
        )
        """

    def testDatiTrasmissioneFormularioModel(self):
        """Test DatiTrasmissioneFormularioModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
